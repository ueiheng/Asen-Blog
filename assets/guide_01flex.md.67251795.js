import{_ as n,a,c as e,e as l,d as p,f as s}from"./app.b29f61af.js";const u=JSON.parse('{"title":"CSS3新增布局之一：flex布局","description":"","frontmatter":{},"headers":[{"level":2,"title":"flex背景","slug":"flex背景","link":"#flex背景","children":[]},{"level":2,"title":"flex基础知识","slug":"flex基础知识","link":"#flex基础知识","children":[]},{"level":2,"title":"主要概念","slug":"主要概念","link":"#主要概念","children":[]},{"level":2,"title":"容器六属性","slug":"容器六属性","link":"#容器六属性","children":[{"level":3,"title":"将容大盒子的display属性设置为display : flex ;大盒子将变成容器，容器拥有6个新属性","slug":"将容大盒子的display属性设置为display-flex-大盒子将变成容器-容器拥有6个新属性","link":"#将容大盒子的display属性设置为display-flex-大盒子将变成容器-容器拥有6个新属性","children":[]}]},{"level":2,"title":"项目属性","slug":"项目属性","link":"#项目属性","children":[]}],"relativePath":"guide/01flex.md","lastUpdated":null}'),o={name:"guide/01flex.md"},t=p(`<h1 id="css3新增布局之一-flex布局" tabindex="-1"><code>CSS3</code>新增布局之一：<code>flex</code>布局 <a class="header-anchor" href="#css3新增布局之一-flex布局" aria-hidden="true">#</a></h1><h2 id="flex背景" tabindex="-1">flex背景 <a class="header-anchor" href="#flex背景" aria-hidden="true">#</a></h2><p>flex 布局背后的<strong>主要思想</strong>是让容器能够改变其项目的宽度/高度（和顺序）以最好地填充可用空间（主要是为了适应各种显示设备和屏幕尺寸）。弹性容器扩展项目以填充可用的可用空间或缩小它们以防止溢出。</p><p>最重要的是，与常规布局（基于垂直的块和基于水平的内联）相反，<strong>弹性盒布局与方向无关</strong>。虽然这些适用于页面，但它们缺乏灵活性来支持大型或复杂的应用程序（尤其是在涉及方向更改、调整大小、拉伸、收缩等时）。</p><p><strong>注意：</strong> <code>flexbox</code>布局最适合应用程序的组件和小规模布局，而<code>Grid</code>布局适用于更大规模的布局。</p><p>网页布局是<code>CSS</code>的一个重点应用。布局的<strong>传统解决方案</strong>，基于盒状模型，依赖 <strong>display</strong>属性 +<strong>position</strong>属性 + <strong>float</strong>属性。它对于那些特殊布局非常不方便，比如，<strong>垂直居中</strong>就不容易实现。</p><h2 id="flex基础知识" tabindex="-1">flex基础知识 <a class="header-anchor" href="#flex基础知识" aria-hidden="true">#</a></h2><p>flex布局（flex是flexible box的缩写）， 也称为<strong>弹性盒模型</strong> 。将属性和属性值（display:flex; ）写在哪个标签样式中，谁就是 容器；它的所有子元素自动成为容器成员，称为<strong>项目</strong>。</p><p>当一个元素的display 取值为flex，所有项目(子元素)会在一行显示；如果所有项目的尺寸之和大于容器，也不会超出父元素的宽、高度。不会换行(每个项目都会自动缩小相应的比例)。</p><blockquote><p>作为可以替代浮动的新布局，flex布局以更先进，更简洁的优点，越来越受大家欢迎。</p></blockquote><h2 id="主要概念" tabindex="-1">主要概念 <a class="header-anchor" href="#主要概念" aria-hidden="true">#</a></h2><ul><li><p><strong>main axis</strong> – 弹性容器的主轴是弹性项目沿其布置的主轴。请注意，它不一定是水平的；这取决于<code>flex-direction</code>属性.</p></li><li><p><strong>main-start | main-end</strong> – 弹性项目放置在容器内，从 main-start 开始到 main-end。主尺寸-一个弹性项目的宽度或高度，无论是在主尺寸，是项目的主要尺寸。弹性项目的主要尺寸属性是“宽度”或“高度”属性，以主要尺寸中的为准。</p></li><li><p><strong>main size</strong> – 垂直于主轴的轴称为交叉轴。它的方向取决于主轴方向。</p></li><li><p><strong>cross axis</strong> – 弹性线填充了项目，并从弹性容器的交叉开始侧开始放置到容器中，并朝向交叉端侧。</p></li><li><p><strong>cross-start | cross-end</strong> –弹性线填充了项目，并从弹性容器的交叉开始侧开始放置到容器中，并朝向交叉端侧。</p></li><li><p><strong>cross size</strong> –弹性项目的宽度或高度，以交叉维度为准，是项目的交叉大小。横向尺寸属性是横向尺寸中的“宽度”或“高度”中的任何一个。</p></li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/c93c97e1b32b43f37b3f1b8db7a33f9b.png" alt="image.png"></p><h2 id="容器六属性" tabindex="-1">容器六属性 <a class="header-anchor" href="#容器六属性" aria-hidden="true">#</a></h2><h3 id="将容大盒子的display属性设置为display-flex-大盒子将变成容器-容器拥有6个新属性" tabindex="-1">将容大盒子的display属性设置为display : flex ;大盒子将变成容器，容器拥有6个新属性 <a class="header-anchor" href="#将容大盒子的display属性设置为display-flex-大盒子将变成容器-容器拥有6个新属性" aria-hidden="true">#</a></h3><p><strong>1. flex-direction</strong></p><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#B2CCD6;">flex-direction</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> row | row-reverse | column | column-reverse</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p>flex-direction属性描述主轴的延展方向.</p></li><li><p>默认值为row：主轴将水平自左向右</p></li><li><p>row-reverse:主轴水平自右向左</p></li><li><p>column:主轴竖直且自上而下</p></li><li><p>column主轴竖直且自下而上</p></li></ul><p><strong>2. flex-wrap</strong></p><p>弹性包装，flex布局中的项目都会尝试在一行中展示</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#B2CCD6;">flex-wrap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> nowrap | wrap | wrap-reverse</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p>flex-wrap:nowrap(默认值):所有弹性项目都将在一行</p></li><li><p>flex-wrap:当项目排不下时自动换行.</p></li><li><p>wrap-reverse: flex 项目将从下到上换行成多行。</p></li></ul><p><strong>3. flex-flow</strong></p><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-flow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> \`flex-direction\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> \`flex-wrap\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>4. justify-content</strong></p><p>justify-content属性定义了项目在主轴上的对齐方式。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | space-between | space-around</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>flex-start:左对齐</li><li>flex-end:右对齐</li><li>center(常用):水平居中</li><li>space-between:两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等。<strong>注意</strong>：此时项目之间的间隔比项目与边框的间隔大一倍。</li></ul><p><strong>5. align-items</strong></p><p>align-items属性定义项目在交叉轴上如何对齐。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | baseline | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>align-items属性通常用于设置垂直居中</strong></p><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li><strong>center：交叉轴的中点对齐。</strong></li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><p><strong>6. align-content</strong></p><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | space-between | space-around | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>flex-start：与交叉轴的起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）：轴线占满整个交叉轴。</li></ul><h2 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-hidden="true">#</a></h2><p>以下6个属性设置在项目上。</p><blockquote><ol><li>order order属性越小，项目越靠近主轴起点</li></ol></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/23d2a14b1d5e8f919d8434bfe166d22c.png" alt="image.png"><br><br><br></p><blockquote><ol start="2"><li>flex-grow</li></ol></blockquote><p><strong>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</strong></p><p>注意：如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。 <br><br><br></p><blockquote><ol start="3"><li>flex-shrink <strong>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</strong></li></ol></blockquote><p>注意：如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。 <br><br></p><blockquote><ol start="3"><li>flex-basis flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</li></ol></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-basis</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;length&gt; | auto</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* default auto */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><br><br><blockquote><ol start="4"><li>flex 常用于快速样式书写</li></ol></blockquote><p><strong>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</strong><br><br><br></p><blockquote><ol start="5"><li>align-self align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</li></ol></blockquote><br><br><br><br>`,60),r=s("p",null,"日期：2022.5.14",-1),i=s("p",null,[l("参考文献："),s("a",{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noreferrer"},"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html")],-1),c=s("p",null,[s("a",{href:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-order",target:"_blank",rel:"noreferrer"},"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-order")],-1);function d(g,f,y,x,D,C){return a(),e("div",null,[t,l(" 作者：Asen "),r,i,c])}const b=n(o,[["render",d]]);export{u as __pageData,b as default};
